mochila=[[150,20],[325,40],[600,50],[805,36],[430,25],[1200,64],[770,54],[60,18],[930,46],[353,28]]


#Esta función crea todas las combinaciones posibles de 2^10 números binarios
def creaCombinaciones:
	combinaciones=[]
	for x in range(2**10):
		combinaciones.append(format(x+1, "b"))


#Completa los 0s en los números binarios < 1000000000
def completarCombinaciones:
	for x in range(2**10):
		tam= len(str(combinaciones[x]))
		for i in range(10-tam):
			combinaciones[x] = '0'+combinaciones[x]



#print(combinaciones)
#Transforma las combinaciones en una lista de listas
def transformaLista:
	combinacionesLista=[]
	for x in range(2**10):
		combinacionesLista.append(list(combinaciones[x]))
		#print(combinacionesLista)
#print(combinacionesLista[1][10])

def inicializaTotal:
	total=[]
	for i in range(2**10):
		total.append([0,0])

#Suma todos los valores del peso y el valor de cada elemento de la combinacion
def sumaTotales:
	for x in range(2**10):
		for i in range(10):
			if(combinacionesLista[x][i] == '1'):
				total[x][0]= total[x][0] + mochila[i][0]
				total[x][1]= total[x][1] + mochila[i][1]

#Busca el valor maximo dentro del peso permitido
def buscaMaximo:
	posValMax=0
	valMax=0
	for x in range(2**10):
		if(total[x][0] <= 4200):
			if(total[x][1] > valMax):
				valMax=total[x][1]
				posValMax=x


print(total)

print(posValMax)
print(valMax)
print(combinacionesLista[posValMax])


